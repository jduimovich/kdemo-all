
verify_env () {
name=$1
val=${!name}
if [ -z $val ]
then
echo "\n" No $1 set, please set to your token to use this script
ERROR=1
else 
if [ $2. == "secret." ]
then
echo $name "= (secret - hidden)"
else
echo $name "= $val"
fi
fi

}

if [ -z $TEKTON_DEMO_NS ]
then
export TEKTON_DEMO_NS=kabanero
fi
if [ -z $TEKTON_DEMO_SA ]
then 
export TEKTON_DEMO_SA=tekton-dashboard
fi 
if [ -z $MY_PUBLIC_GIT_USER ]
then 
export MY_PUBLIC_GIT_USER=jduimovich
fi 

verify_env "TEKTON_DEMO_NS"
verify_env "TEKTON_DEMO_SA"

verify_env "MY_PUBLIC_GIT_USER" 
verify_env "MY_PUBLIC_GIT_TOKEN"  secret

verify_env "MY_DOCKER_USER" 
verify_env "MY_DOCKER_PW"  secret 

if [ -z $ERROR ]
then
echo $0 "Environment Variables OK"
else
echo $0 "WARNING: Some Environment Variables Missing, see log."
echo $0 "Deploy will still work with defaults but recommend adding correct configuration."
#exit 
fi

sh get

CURRENT=$(pwd)
EXPORT PATH=$PATH;$CURRENT/devops-tekton-demo/scripts

cd devops-tekton-demo
source verify-dependencies 
sh install.sh
run-p0

#wait for the pipelines to be installed
kubectl get pipelines -n $TEKTON_DEMO_NS docker-build-deploy
until [ $? -eq 0 ]; do 
echo Waiting for Pipelines to be installed.
sleep 4
kubectl get pipelines -n $TEKTON_DEMO_NS docker-build-deploy
done

kubectl apply \
    -f https://raw.githubusercontent.com/iter8-tools/iter8-analytics/master/install/kubernetes/iter8-analytics.yaml \
    -f https://raw.githubusercontent.com/iter8-tools/iter8-controller/master/install/iter8-controller.yaml 

cd $CURRENT

run-p0
sh deploy
